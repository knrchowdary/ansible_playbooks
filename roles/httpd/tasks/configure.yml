---
- name: adding LD_LIBRARY to env variable for httpd
  lineinfile:
    dest: /etc/sysconfig/httpd
    regexp: "^LD_LIBRARY_PATH"
    line: "LD_LIBRARY_PATH={{ apache_modules_dir }}"
  notify: restart apache

- name: load extra module
  include_tasks: "configure-module.yml"
  with_dict: "{{ apache_extra_modules }}"
  loop_control: 
    loop_var: module
  notify: restart apache

# - name: Check whether certificates defined in vhosts exist.
#   stat: path={{ item.certificate_file }}
#   register: apache_ssl_certificates
#   with_items: "{{ apache_vhosts_ssl }}"

- name: Add apache main configuration.
  template:
    src: httpd.conf.j2
    dest: "{{ apache_server_root }}/conf/httpd.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: restart apache

- name: add apache browser conf
  template: 
    src: browser.conf.j2
    dest: "{{ apache_server_root }}/conf.d/browser.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: restart apache

- name: add apache proxy conf if defined
  template: 
    src: proxy.conf.j2
    dest: "{{ apache_server_root }}/conf.d/proxy.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: restart apache
  when: (apache_proxy is defined) and (apache_proxy is not none) and (apache_proxy != "")

- name: add apache mod_evasive conf if defined
  template: 
    src: evasive.conf.j2
    dest: "{{ apache_server_root }}/conf.d/mod_evasive.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  notify: restart apache
  when: (apache_evasive is defined) and (apache_evasive is not none) and (apache_evasive != "")

- debug: 
    msg: "group_names = {{group_names}}"
  when: (group_names is defined) and (group_names is not none) and (group_names != "")
- debug:
    msg: "apache_proxy_override = {{apache_proxy_override}}"
  when: (apache_proxy_override is defined) and (apache_proxy_override is not none) and (apache_proxy_override != "")

- name: add noindex.html file if defined
  template: 
    src: noindex.html.j2
    dest: "{{ apache_documentroot }}/noindex.html"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  when: (apache_proxy_noindex_url is defined) and (apache_proxy_noindex_url is not none) and (apache_proxy_noindex_url != "") 

- name: add healthCheck.html file
  template: 
    src: healthCheck.html.j2
    dest: "{{ apache_documentroot }}/healthCheck.html"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  
- name: add ssl conf if defined
  template: 
    src: httpd_ssl.conf.j2
    dest: "{{ apache_server_root }}/conf.d/httpd_ssl.conf"
    owner: root
    group: root
    mode: 0644
    backup: yes
  when: (apache_ssl is defined) and (apache_ssl is not none) and (apache_ssl != "")

- name: Remove unwanted/default files 
  file:
    path: "{{ item }}"
    state: absent
  notify: restart apache
  when: apache_remove_default_file is defined and apache_remove_default_file != None
  with_items: "{{ apache_remove_default_file }}"

- name: "Set selinux {{ item.key }}"
  seboolean:
    name: "{{ item.key }}"
    state: "{{ item.value }}"
    persistent: yes
  with_dict: "{{ apache_selinux.setsebool }}"
  when: ansible_selinux.status == "enabled"